name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build dtctl for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.16']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      # Build on Windows
      - name: Build on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # Create builds directory
          New-Item -ItemType Directory -Force -Path builds
          # Build the executable
          go build -o dtctl.exe
          # Compress the executable
          Compress-Archive -Path dtctl.exe -DestinationPath builds/dtctl-windows-amd64.zip

      # Build on macOS and Linux
      - name: Build on macOS and Linux
        if: runner.os != 'Windows'
        run: |
          mkdir -p builds
          GOOS=$(uname | tr '[:upper:]' '[:lower:]')
          if [ "$GOOS" = "darwin" ]; then
            GOOS="macos"
          fi
          go build -o dtctl
          zip -j builds/dtctl-${GOOS}-amd64.zip dtctl

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dtctl-binaries
          path: builds/*.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dtctl-binaries
          path: builds

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: builds/*.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
